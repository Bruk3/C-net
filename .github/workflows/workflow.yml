name: Main workflow

on:
  - pull_request

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-20.04
        ocaml-version:
          - 4.11.1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Opam Dependencies
        id: cache-llvm
        uses: actions/cache@v2
        with:
            path: ${{ runner.temp }}/llvm
            key: llvm-10.0
      # - name: Use OCaml ${{ matrix.ocaml-version }}
      #   uses: avsm/setup-ocaml@v1
      #   with:
      #     ocaml-version: ${{ matrix.ocaml-version }}

      - name: Install llvm
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: _export
          key:  ${{ runner.os }}-esy-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: |
            ${{ runner.os }}-esy-

      - name: Esy install
        run: 'esy install'

      - name: Import Cache
        run: |
          esy import-dependencies _export
          rm -rf _export

      - run: sudo apt install opam
      - run: opam init
      - run: opam install -y llvm.10.0.0
      - run: opam install -y ocamlbuild

      # Re-export dependencies if anything has changed or if it is the first time
      - name: Setting dependency cache
        run: |
          esy export-dependencies
        if: steps.restore-cache.outputs.cache-hit != 'true'

      - run: make ci-test && echo SUCCESS

  # slack-workflow-status:
  #   if: always()
  #   name: Post Workflow Status To Slack
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Slack Workflow Notification
  #       uses: Gamesight/slack-workflow-status@master
  #       with:
  #         # Required Input
  #         repo_token: ${{secrets.GITHUB_TOKEN}}
  #         slack_webhook_url: ${{secrets.SLACK_WEBHOOK}}
